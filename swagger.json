{
  "swagger": "2.0",
  "info": {
    "description": "Hospital Management Software Api Documentation",
    "version": "1.0.0",
    "title": "Hospital Management API",
    "contact": {
      "email": "ananioluwatobiloba2000@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3000",
  "basePath": "/api",
  "paths": {
    "/login": {
      "put": {
        "summary": "login a patient",
        "description": "patient login",
        "produces": ["application/json"],
        "parameters": [
          {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          }
        }
      }
    },
    "/patient/auth/signup": {
      "post": {
        "summary": "Signup as a patient",
        "description": "To signup as a patient",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string"
                },
                "gender":{
                  "type": "string"
                },
                "phoneNumber":{
                  "type": "string"
                },
                "height": {
                  "type": "string"
                },
                "weight": {
                  "type": "string"
                },
                "bloodGroup": {
                  "type": "string"
                },
                "genotype": {
                  "type": "string"
                },
                "occupation": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Patient Registration Successfully!",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "500": {
            "description": "Could not register patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/search": {
      "get": {
        "summary": "Search for data",
        "description": "Search for firstname or lastname",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "search through firstname and lastname in db",
            "required": true,
            "schema": {
              "type": "query",
              "properties": {
                "name": {
                  "type": "string",
                  "$ref": "#/definitions/successResponse"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/all": {
      "get": {
        "summary": "Fetch all patients",
        "description": "Search for firstname or lastname",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "start is where the pagination starts default is 0",
            "required": false
          },
          {
            "in": "query",
            "name": "count",
            "description": " count is how many results it returns default is 20",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "fetched all patients successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/profile/:{id}": {
      "get": {
        "summary": "get a patient proflle by Id",
        "description": "Fetch a patient by id",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "params",
            "description": "profile id that needs to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          }
        }
      }
    },
    "/patient/profile/{:id}/edit": {
      "put": {
        "summary": "get a patient proflle by Id",
        "description": "Fetch a patient by id",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "profile id that needs to be fetched",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string"
                },
                "gender":{
                  "type": "string"
                },
                "phoneNumber":{
                  "type": "string"
                },
                "height": {
                  "type": "string"
                },
                "weight": {
                  "type": "string"
                },
                "bloodGroup": {
                  "type": "string"
                },
                "genotype": {
                  "type": "string"
                },
                "occupation": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          }
        }
      }
    },
    "/patient/admit/": {
      "post": {
        "summary": "Create a patient admission record",
        "description": "This route is to create a patient admission record",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "type": "string"
                },
                "admittedOn": {
                  "type": "string"
                },
                "dischargedOn": {
                  "type": "string"
                },
                "roomNumber": {
                  "type": "string"
                },
                "bedNumber": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient Admitted Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/admit/:{recordId}/update": {
      "put": {
        "summary": "update a patient admission record",
        "description": "This route is to update a patient admission record",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "type": "string"
                },
                "admittedOn": {
                  "type": "string"
                },
                "dischargedOn": {
                  "type": "string"
                },
                "roomNumber": {
                  "type": "string"
                },
                "bedNumber": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient Admission Record Updated Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/admit/:{recordId}/delete": {
      "delete": {
        "summary": "delete a patient admission record",
        "description": "This route is to delete a patient admission record",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Patient Admission Record Deleted Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/patient/admit/:{recordId}": {
      "get": {
        "summary": "get a patient admission record",
        "description": "This route is to get a patient admission record",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Patient Admission Record fetched Successfully!",
            "schema": {
                "$ref": "#/definitions/successResponse"
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/lab/report/create": {
      "post": {
        "summary": "Create a patient lab report",
        "description": "This route is to create a patient lab report",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "lab report details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "type": "string"
                },
                "admissionId": {
                  "type": "string"
                },
                "testName": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "testValue": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              }
          }
        }
        ],
        "responses": {
          "200": {
            "description": "Patient Lab Report Created Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            },
            "500": {
              "description": "Could not fetch patient",
              "schema": {
                "$ref": "#/definitions/serverFailure"
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          }
        }
      }
    }
  },
    "/lab/report/edit/:{reportId}": {
      "put": {
        "summary": "update a patient report record",
        "description": "This route is to update a patient report record",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patientId": {
                  "type": "string"
                },
                "admissionId": {
                  "type": "string"
                },
                "testName": {
                  "type": "string"
                },
                "result": {
                  "type": "string"
                },
                "testValue": {
                  "type": "string"
                },
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient Admission Record Updated Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/lab/report/:{reportId}": {
      "get": {
        "summary": "get a patient lab report",
        "description": "This route is to get a patient lab report",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Patient lab report fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/lab/report/:{patientId}/all": {
      "get": {
        "summary": "get all  lab report",
        "description": "This route is to get all lab reports for a patient",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "responses": {
          "200": {
            "description": "Patient lab report fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not fetch patient",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "summary": "admin login route",
        "description": "This route is to log an admin in",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Log in Successful!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not login admin",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/admin/employee/create": {
      "post": {
        "summary": "admin creates employee",
        "description": "Only Admins can create an employee",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee Created Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not create employee",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    },
    "/admin/employee/update/:{employeeDetailsId}": {
      "put": {
        "summary": "Employee can update their profile",
        "description": "Only Employees can update their profile",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patient details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee Details Updated Successfully!",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/successResponse"
              }
            }
          },
          "400": {
            "description": "Invalid parameters error",
            "schema": {
              "$ref": "#/definitions/failureResponse"
            }
          },
          "500": {
            "description": "Could not update employee details",
            "schema": {
              "$ref": "#/definitions/serverFailure"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "successResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      }
    },
    "failureResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "serverFailure": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
